{
	"info": {
		"_postman_id": "81d19aee-b5a4-4f0d-9e82-f8a283f6a2cb",
		"name": "Billing Order API Tests  collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create billing order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6cfd210f-c057-4130-b21d-c411ca2039cc",
						"exec": [
							"//After body / Test",
							"",
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"fname = pm.environment.get(\"firstname\");",
							"inum = pm.environment.get(\"i\");",
							"",
							"var responseData = pm.response.json();",
							"id = responseData.id;",
							"",
							"pm.environment.set(\"id\", id);",
							"",
							"pm.test(\"validating data\", function () {",
							"    ",
							"    pm.expect(responseData.firstName).to.eql(fname);",
							"    pm.expect(responseData.itemNumber).to.eql(inum);",
							"    ",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "93361cf4-c164-4102-bf56-f18f1415d76c",
						"exec": [
							"//Before body ",
							"",
							"",
							"pm.environment.set(\"i\", 10);",
							"",
							"//ing i = 10;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"{{firstname}}\",\r\n \r\n \r\n \r\n \r\n  \"addressLine1\": \"string\",\r\n  \"addressLine2\": \"string\",\r\n  \"city\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"email\": \"ajit@test.com\",\r\n \r\n  \"id\": 0,\r\n  \"itemNumber\": {{i}},\r\n  \"lastName\": \"string\",\r\n  \"phone\": \"1231231231\",\r\n  \"state\": \"AL\",\r\n  \"zipCode\": \"123123\"\r\n}"
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/BillingOrder",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"BillingOrder"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read billing order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "993522ca-b541-4175-8edf-d4036907e6ee",
						"exec": [
							"",
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"fname = pm.environment.get(\"firstname\");",
							"inum = pm.environment.get(\"i\");",
							"",
							"var responseData = pm.response.json();",
							"",
							"pm.test(\"validating data\", function () {",
							"    ",
							"    pm.expect(responseData.firstName).to.eql(fname);",
							"    pm.expect(responseData.itemNumber).to.eql(inum);",
							"    ",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}:{{port}}/BillingOrder/{{id}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"BillingOrder",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update billing order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "55bb2387-5d1a-47f1-ab34-a1e9d1075e74",
						"exec": [
							"fname = pm.environment.get(\"firstname\");",
							"inum = pm.environment.get(\"i\");",
							"",
							"var responseData = pm.response.json();",
							"",
							"",
							"pm.test(\"item number is -- \" + inum, function () {  1===1; });",
							"",
							"",
							"pm.test(\"validating data\", function () {",
							"    ",
							"    pm.expect(responseData.firstName).to.eql(fname);",
							"    pm.expect(responseData.itemNumber).to.eql(inum);",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c9add0be-17bf-4106-908d-760bed6ab122",
						"exec": [
							"pm.environment.set(\"i\", 1000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"{{firstname}}\",\r\n  \"addressLine1\": \"string\",\r\n  \"addressLine2\": \"string\",\r\n  \"city\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"email\": \"ajit@test.com\",\r\n  \"itemNumber\": {{i}},\r\n  \"lastName\": \"string\",\r\n  \"phone\": \"1231231231\",\r\n  \"state\": \"AL\",\r\n  \"zipCode\": \"123123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/BillingOrder/{{id}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"BillingOrder",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete billing order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3466ec44-d92d-426e-b5e9-3c2c17b1436f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{url}}:{{port}}/BillingOrder/{{id}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"BillingOrder",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "validate delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a26acf55-cf09-41fd-b5ee-4b6c45b4a159",
						"exec": [
							" var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"body should return null\", function () {",
							"   ",
							"    pm.expect(jsonData).to.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}:{{port}}/BillingOrder/{{id}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"BillingOrder",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}